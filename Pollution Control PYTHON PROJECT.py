# -*- coding: utf-8 -*-
"""Untitled22.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/10-7cQQi_RpEQUdMVSIEbumqq3tqNT6vw
"""

# Let's start by building a foundational version of this project
# Step-by-step we'll:
# - Load air quality data (mocked or simplified here)
# - Load land use raster (simulated)
# - Analyze suitability for afforestation
# - Plot potential afforestation areas

import numpy as np
import pandas as pd
import geopandas as gpd
import matplotlib.pyplot as plt
from shapely.geometry import Point, Polygon

# Simulate some AQI data points (normally you would use OpenAQ or similar sources)
aqi_data = pd.DataFrame({
    'latitude': [18.5, 18.6, 18.7, 18.8, 18.9],
    'longitude': [73.8, 73.9, 74.0, 74.1, 74.2],
    'AQI': [180, 220, 95, 310, 150]  # AQI values (higher = more polluted)
})

# Create GeoDataFrame
geometry = [Point(xy) for xy in zip(aqi_data['longitude'], aqi_data['latitude'])]
gdf_aqi = gpd.GeoDataFrame(aqi_data, geometry=geometry)
gdf_aqi.set_crs(epsg=4326, inplace=True)

# Simulate land use data grid (for demonstration, a simple grid of values)
land_use = np.random.choice(['urban', 'barren', 'forest', 'agriculture'], size=(10, 10))
suitability = np.zeros((10, 10))

# Define weights for land types
weights = {
    'urban': 0,
    'barren': 1,
    'forest': 0,
    'agriculture': 0.5
}

# Apply suitability based on land use
for i in range(10):
    for j in range(10):
        suitability[i, j] = weights[land_use[i, j]]

# Simulate distance from AQI hotspots as a suitability factor
# Here, assume top left of the grid is (18.5, 73.8), bottom right is (18.9, 74.2)
latitudes = np.linspace(18.5, 18.9, 10)
longitudes = np.linspace(73.8, 74.2, 10)
X, Y = np.meshgrid(longitudes, latitudes)

# Calculate inverse distance weight to AQI points (simplified)
for index, row in gdf_aqi.iterrows():
    distance = np.sqrt((X - row['longitude'])**2 + (Y - row['latitude'])**2)
    pollution_influence = np.where(distance != 0, row['AQI'] / distance, row['AQI'])
    suitability += pollution_influence / 1000  # scale down for visualization

# Normalize suitability to [0, 1]
suitability = suitability / np.max(suitability)

# Plot the suitability map
plt.figure(figsize=(8, 6))
plt.imshow(suitability, cmap='YlGn', extent=(73.8, 74.2, 18.5, 18.9), origin='lower')
plt.colorbar(label='Afforestation Suitability Score')
plt.title("Potential Areas for Afforestation (Simulated Example)")
plt.xlabel("Longitude")
plt.ylabel("Latitude")
plt.scatter(aqi_data['longitude'], aqi_data['latitude'], c='red', label='AQI Points')
plt.legend()
plt.grid(True)
plt.tight_layout()
plt.show()